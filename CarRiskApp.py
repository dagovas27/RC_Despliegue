# -*- coding: utf-8 -*-
"""6_Despliegue_Clasificacion_CarRiskStreamLit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u_SaIDYJ_Ucw3GEmU6-vnJ8xLLHPK7dI

# Despliegue

- Cargamos el modelo
- Cargamos los datos futuros
- Preparar los datos futuros
- Aplicamos el modelo para la predicción
"""

#Cargamos librerías principales
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Cargamos el modelo
import pickle
filename = 'modelo-cla.pkl'
modelo_knn, min_max_scaler, variables, labelencoder = pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros
#data = pd.read_csv("/content/carRisk-future.csv")
#data.head()

#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.title('Predicción de riesgo de accidentalidad')

age = st.slider('age', min_value=18, max_value=80, value=30, step=1)
cartype = st.selectbox('cartype', ['family', 'sport','combi','minivan'])

datos = [[age, cartype]]
data = pd.DataFrame(datos, columns=['age', 'cartype']) #Dataframe con los mismos nombres de variables

#Preparamos los datos futuros: dummies
data_preparada=data.copy()
data_preparada = pd.get_dummies(data_preparada, columns=['cartype'], dtype=int, drop_first=False) #Siempre drop_first=False en el despliegue
data_preparada.head()

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

#Normalización para los metodos Knn, RN y SVM
data_preparada[['age']]= min_max_scaler.transform(data_preparada[['age']])
data_preparada.head()

"""#**Predicciones**"""

#Hacemos la predicción con Knn
Y_fut = modelo_knn.predict(data_preparada)
data['Knn']=labelencoder.inverse_transform(Y_fut)
data.head()

print(labelencoder.inverse_transform(Y_fut))

data

#Cargar datos futuros
#data = pd.read_csv("carRisk - futuro.csv")
#data.head()
